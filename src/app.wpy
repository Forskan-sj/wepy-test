<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)
wepy.$store = store

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
    // let mypro = new Promise((resolve, reject) => {
    //   setTimeout(() => {
    //     resolve(123);
    //   }, 2000);
    // });
    // mypro.then((r)=>{
    //   console.log(r);
    // })
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    console.log('sasasasobject')
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    // wepy.getUserInfo({
    //   success (res) {
    //     that.globalData.userInfo = res.userInfo
    //     cb && cb(res.userInfo)
    //   }
    // })
    wepy.getUserInfo().then((res) => {
      that.globalData.userInfo = res.userInfo
      cb && cb(res.userInfo)
    })
  }
}
</script>
